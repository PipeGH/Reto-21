import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { DefaultGlobalConfig, NOTIFICATION_CONFIG } from './interfaces/i-notification';
import { NgxToastNotifierComponent } from './components/ngx-toast-notifier.component';
import { NotificationComponent } from './components/notification/notification.component';
import * as i0 from "@angular/core";
export class NgxToastNotifierModule {
    static forRoot(config = {}) {
        return {
            ngModule: NgxToastNotifierModule,
            providers: [
                {
                    provide: NOTIFICATION_CONFIG,
                    useValue: {
                        default: DefaultGlobalConfig,
                        config
                    }
                }
            ]
        };
    }
}
NgxToastNotifierModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.10", ngImport: i0, type: NgxToastNotifierModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgxToastNotifierModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.10", ngImport: i0, type: NgxToastNotifierModule, declarations: [NgxToastNotifierComponent,
        NotificationComponent], imports: [CommonModule], exports: [NgxToastNotifierComponent] });
NgxToastNotifierModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.10", ngImport: i0, type: NgxToastNotifierModule, imports: [[
            CommonModule
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.10", ngImport: i0, type: NgxToastNotifierModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        NgxToastNotifierComponent,
                        NotificationComponent
                    ],
                    imports: [
                        CommonModule
                    ],
                    exports: [
                        NgxToastNotifierComponent
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXRvYXN0LW5vdGlmaWVyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC10b2FzdC1ub3RpZmllci9zcmMvbGliL25neC10b2FzdC1ub3RpZmllci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxtQkFBbUIsRUFBdUIsbUJBQW1CLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM1RyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUN0RixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQzs7QUFnQnpGLE1BQU0sT0FBTyxzQkFBc0I7SUFDakMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxTQUF3QyxFQUFFO1FBQ3ZELE9BQU87WUFDTCxRQUFRLEVBQUUsc0JBQXNCO1lBQ2hDLFNBQVMsRUFBRTtnQkFDVDtvQkFDRSxPQUFPLEVBQUUsbUJBQW1CO29CQUM1QixRQUFRLEVBQUU7d0JBQ1IsT0FBTyxFQUFFLG1CQUFtQjt3QkFDNUIsTUFBTTtxQkFDUDtpQkFDRjthQUNGO1NBQ0YsQ0FBQTtJQUNILENBQUM7O29IQWRVLHNCQUFzQjtxSEFBdEIsc0JBQXNCLGlCQVYvQix5QkFBeUI7UUFDekIscUJBQXFCLGFBR3JCLFlBQVksYUFHWix5QkFBeUI7cUhBR2hCLHNCQUFzQixZQVB4QjtZQUNQLFlBQVk7U0FDYjs0RkFLVSxzQkFBc0I7a0JBWmxDLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFO3dCQUNaLHlCQUF5Qjt3QkFDekIscUJBQXFCO3FCQUN0QjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsWUFBWTtxQkFDYjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AseUJBQXlCO3FCQUMxQjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGVmYXVsdEdsb2JhbENvbmZpZywgR2xvYmFsQ29uZmlndXJhdGlvbiwgTk9USUZJQ0FUSU9OX0NPTkZJRyB9IGZyb20gJy4vaW50ZXJmYWNlcy9pLW5vdGlmaWNhdGlvbic7XG5pbXBvcnQgeyBOZ3hUb2FzdE5vdGlmaWVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL25neC10b2FzdC1ub3RpZmllci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTm90aWZpY2F0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL25vdGlmaWNhdGlvbi9ub3RpZmljYXRpb24uY29tcG9uZW50JztcblxuXG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIE5neFRvYXN0Tm90aWZpZXJDb21wb25lbnQsXG4gICAgTm90aWZpY2F0aW9uQ29tcG9uZW50XG4gIF0sXG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGVcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIE5neFRvYXN0Tm90aWZpZXJDb21wb25lbnRcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBOZ3hUb2FzdE5vdGlmaWVyTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoY29uZmlnIDogUGFydGlhbDxHbG9iYWxDb25maWd1cmF0aW9uPiA9IHt9KTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hUb2FzdE5vdGlmaWVyTW9kdWxlPntcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IE5neFRvYXN0Tm90aWZpZXJNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IE5PVElGSUNBVElPTl9DT05GSUcsXG4gICAgICAgICAgdXNlVmFsdWU6IHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IERlZmF1bHRHbG9iYWxDb25maWcsXG4gICAgICAgICAgICBjb25maWdcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9XG4gIH1cbn1cbiJdfQ==