import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { YouTubeIFrameApiService } from "../../interfaces/src/services";
import * as i0 from "@angular/core";
export function getIFrameApi() {
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-ignore
    return window.YT;
}
export class StandardYouTubeIFrameApiService extends YouTubeIFrameApiService {
    constructor() {
        super();
        this._api = new BehaviorSubject(undefined);
        const maybeExistingApi = getIFrameApi();
        if (!maybeExistingApi) {
            const tag = document.createElement('script');
            tag.src = 'https://www.youtube.com/iframe_api';
            const firstScriptTag = document.getElementsByTagName('script')[0];
            if (!firstScriptTag || !firstScriptTag.parentNode) {
                this._api.error(new Error('Could not find or initialize YouTube IFrame API. No first script tag was found in the document'));
                return;
            }
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore
            window.onYouTubeIframeAPIReady = () => {
                this._api.next(getIFrameApi());
            };
        }
        else {
            this._api.next(maybeExistingApi);
        }
    }
    get api() {
        return this._api.value;
    }
    get apiChange() {
        return this._api.asObservable();
    }
}
StandardYouTubeIFrameApiService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: StandardYouTubeIFrameApiService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
StandardYouTubeIFrameApiService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: StandardYouTubeIFrameApiService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: StandardYouTubeIFrameApiService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return []; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieW91dHViZS1pZnJhbWUtYXBpLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL3lvdXR1YmUtcGxheWVyL3NyYy9zZXJ2aWNlcy9zcmMveW91dHViZS1pZnJhbWUtYXBpLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsZUFBZSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ25ELE9BQU8sRUFBQyx1QkFBdUIsRUFBQyxNQUFNLCtCQUErQixDQUFDOztBQUd0RSxNQUFNLFVBQVUsWUFBWTtJQUMxQiw2REFBNkQ7SUFDN0QsYUFBYTtJQUNiLE9BQU8sTUFBTSxDQUFDLEVBQXNCLENBQUM7QUFDdkMsQ0FBQztBQUtELE1BQU0sT0FBTywrQkFBZ0MsU0FBUSx1QkFBdUI7SUFXMUU7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQVhGLFNBQUksR0FBRyxJQUFJLGVBQWUsQ0FBK0IsU0FBUyxDQUFDLENBQUM7UUFhMUUsTUFBTSxnQkFBZ0IsR0FBRyxZQUFZLEVBQUUsQ0FBQztRQUN4QyxJQUFJLENBQUMsZ0JBQWdCLEVBQUU7WUFDckIsTUFBTSxHQUFHLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUM3QyxHQUFHLENBQUMsR0FBRyxHQUFHLG9DQUFvQyxDQUFDO1lBQy9DLE1BQU0sY0FBYyxHQUFHLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNsRSxJQUFJLENBQUMsY0FBYyxJQUFJLENBQUMsY0FBYyxDQUFDLFVBQVUsRUFBRTtnQkFDakQsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQ2IsSUFBSSxLQUFLLENBQ1AsZ0dBQWdHLENBQ2pHLENBQ0YsQ0FBQztnQkFDRixPQUFPO2FBQ1I7WUFFRCxjQUFjLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQUUsY0FBYyxDQUFDLENBQUM7WUFFNUQsNkRBQTZEO1lBQzdELGFBQWE7WUFDYixNQUFNLENBQUMsdUJBQXVCLEdBQUcsR0FBRyxFQUFFO2dCQUNwQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDO1lBQ2pDLENBQUMsQ0FBQztTQUNIO2FBQU07WUFDTCxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1NBQ2xDO0lBQ0gsQ0FBQztJQW5DRCxJQUFJLEdBQUc7UUFDTCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3pCLENBQUM7SUFFRCxJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDbEMsQ0FBQzs7NEhBVFUsK0JBQStCO2dJQUEvQiwrQkFBK0IsY0FGOUIsTUFBTTsyRkFFUCwrQkFBK0I7a0JBSDNDLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0LCBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQge1lvdVR1YmVJRnJhbWVBcGlTZXJ2aWNlfSBmcm9tIFwiLi4vLi4vaW50ZXJmYWNlcy9zcmMvc2VydmljZXNcIjtcbmltcG9ydCB7WW91VHViZUlGcmFtZUFwaX0gZnJvbSBcIi4uLy4uL2ludGVyZmFjZXMvc3JjL3lvdXR1YmUtYXBpXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRJRnJhbWVBcGkoKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWNvbW1lbnRcbiAgLy8gQHRzLWlnbm9yZVxuICByZXR1cm4gd2luZG93LllUIGFzIFlvdVR1YmVJRnJhbWVBcGk7XG59XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBTdGFuZGFyZFlvdVR1YmVJRnJhbWVBcGlTZXJ2aWNlIGV4dGVuZHMgWW91VHViZUlGcmFtZUFwaVNlcnZpY2Uge1xuICBwcml2YXRlIF9hcGkgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PFlvdVR1YmVJRnJhbWVBcGkgfCB1bmRlZmluZWQ+KHVuZGVmaW5lZCk7XG5cbiAgZ2V0IGFwaSgpOiBZb3VUdWJlSUZyYW1lQXBpIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5fYXBpLnZhbHVlO1xuICB9XG5cbiAgZ2V0IGFwaUNoYW5nZSgpOiBPYnNlcnZhYmxlPFlvdVR1YmVJRnJhbWVBcGkgfCB1bmRlZmluZWQ+IHtcbiAgICByZXR1cm4gdGhpcy5fYXBpLmFzT2JzZXJ2YWJsZSgpO1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIGNvbnN0IG1heWJlRXhpc3RpbmdBcGkgPSBnZXRJRnJhbWVBcGkoKTtcbiAgICBpZiAoIW1heWJlRXhpc3RpbmdBcGkpIHtcbiAgICAgIGNvbnN0IHRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICAgICAgdGFnLnNyYyA9ICdodHRwczovL3d3dy55b3V0dWJlLmNvbS9pZnJhbWVfYXBpJztcbiAgICAgIGNvbnN0IGZpcnN0U2NyaXB0VGFnID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NjcmlwdCcpWzBdO1xuICAgICAgaWYgKCFmaXJzdFNjcmlwdFRhZyB8fCAhZmlyc3RTY3JpcHRUYWcucGFyZW50Tm9kZSkge1xuICAgICAgICB0aGlzLl9hcGkuZXJyb3IoXG4gICAgICAgICAgbmV3IEVycm9yKFxuICAgICAgICAgICAgJ0NvdWxkIG5vdCBmaW5kIG9yIGluaXRpYWxpemUgWW91VHViZSBJRnJhbWUgQVBJLiBObyBmaXJzdCBzY3JpcHQgdGFnIHdhcyBmb3VuZCBpbiB0aGUgZG9jdW1lbnQnXG4gICAgICAgICAgKVxuICAgICAgICApO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGZpcnN0U2NyaXB0VGFnLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRhZywgZmlyc3RTY3JpcHRUYWcpO1xuXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10cy1jb21tZW50XG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICB3aW5kb3cub25Zb3VUdWJlSWZyYW1lQVBJUmVhZHkgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2FwaS5uZXh0KGdldElGcmFtZUFwaSgpKTtcbiAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2FwaS5uZXh0KG1heWJlRXhpc3RpbmdBcGkpO1xuICAgIH1cbiAgfVxufVxuIl19